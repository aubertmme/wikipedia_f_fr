{
	"name": "myDataFlowRadioN",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "JsonRadioA",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlRadioTableN2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "OriginalData"
				},
				{
					"name": "SubsByLocation"
				},
				{
					"name": "CountOfSubTypeByGender"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Join2"
				},
				{
					"name": "CleanUp"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(output(\n\t\tartist as string,\n\t\tauth as string,\n\t\tfirstName as string,\n\t\tgender as string,\n\t\titemInSession as integer,\n\t\tlastName as string,\n\t\tlength as double,\n\t\tlevel as string,\n\t\tlocation as string,\n\t\tmethod as string,\n\t\tpage as string,\n\t\tregistration as long,\n\t\tsessionId as integer,\n\t\tsong as string,\n\t\tstatus as integer,\n\t\tts as long,\n\t\tuserId as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine',\n\tpreferredIntegralType: 'integer') ~> source1\nsource1 select(mapColumn(\n\t\tfirstName,\n\t\tgender,\n\t\tlastName,\n\t\tlevel_type = level,\n\t\tlocation,\n\t\tmethod,\n\t\tpage,\n\t\tregistration,\n\t\tstatus,\n\t\ttimestamp = ts\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> OriginalData\nSelect1 aggregate(groupBy(location),\n\tsubsbylocation = count(),\n\t\ttimestamp = first(timestamp)) ~> SubsByLocation\nSelect1 aggregate(groupBy(gender,\n\t\tlevel_type),\n\tcountofsubtypebygender = count(),\n\t\ttimestamp = first(timestamp)) ~> CountOfSubTypeByGender\nOriginalData, CountOfSubTypeByGender join(OriginalData@timestamp == CountOfSubTypeByGender@timestamp,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join1\nJoin1, SubsByLocation join(CountOfSubTypeByGender@timestamp == SubsByLocation@timestamp,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> Join2\nJoin2 select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CleanUp\nCleanUp derive(fullname = firstName+' '+lastName,\n\t\tstate = split(location, ', ')[2]) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
		}
	}
}